WN2A 3GHz Spectrum Analyzer

Primarily uses PyQt GUI, pyqtgraph, and pyserial.

Work is progressing on an application that sends control codes from the PC, reads the Arduino ADC, and then recieves the data from the serial port. This tends to block the main thread of the gui so a pynput keyboard listener was setup to monitor for the ESC key. If pressed it will cancel the current sweep and lesaves the current plot on screen.

There are three distinct, but ultimately related, areas of concern.

SERIAL:
Serial must be able to successfully read and write several kilobytes of data regardless of the speed of the controller vs. the speed of the PC.  If there are any problems with the serial it can't be allowed to block the GUI.  The ultimate goal is to perform progressive plotting but for now an entire sweep of data must be received before it can be plotted.


GUI:
The GUI *must* be responsive no matter what state the program is in. The user should never be locked out of the program while a long running process tries to run to completion. For now a long running sweep blocks the GUI unless the user presses the ESC key.


PLOTTING:
Plotting speed is drastically improved by doing two things;
  1) Set the configuration options pyqtgraph.setConfigOptions(useOpenGL=True, enableExperimental=True)
  2) Updating the plot with graphWidget.plot.setData(x_axis_data_list, y_axis_data_list).
If not, then plot updates become exceedingly slow beyond more than a few hundred data points.


CONTROLLER:
An Arduino UNO is being used as the main controller during development. This was a deliberate choice with the idea that the best way to find methods of optimizing for speed is to restrict development to the slowest controller around. This challenge is further enhanced by restricting the Arduino code to what is primarily found on the reference page. This forced the developers to use SPI, 2Mbit serial, bit-masking, bit-shifting, binary serial transport instead of ASCII, and to eliminate the use of the delay() function(s). To speed up the operations of the Spectrum Analyzer it was necessary to use integer steps for the LO1, reduce the number of registers to be programmed for LO2 and LO3, and to program all the frequencies related to ref1 before programming all the frequencies related to ref2.




















